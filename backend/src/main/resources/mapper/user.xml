<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yeoro.domain.user.model.mapper.UserMapper">

	<!-- 결과 매핑 -->
	<resultMap id="userResultMap" type="com.yeoro.domain.user.model.dto.UserDto">
		<result column="user_id" property="userId"/>
		<result column="password" property="password"/>
		<result column="nickname" property="nickname"/>
		<result column="picture_url" property="pictureUrl"/>
		<result column="is_admin" property="isAdmin"/>
		<result column="provider_type" property="providerType"/>
		<result column="refresh_token" property="refreshToken"/>
		<result column="created_at" property="createdAt"/>
		<result column="updated_at" property="updatedAt"/>
	</resultMap>

	<!-- 사용자 등록 -->
	<insert id="insertUser" parameterType="com.yeoro.domain.user.model.dto.UserDto">
		INSERT INTO user (user_id, password, nickname, picture_url, is_admin, provider_type, refresh_token)
		VALUES (#{userId}, #{password}, #{nickname}, #{pictureUrl, jdbcType=VARCHAR}, #{isAdmin, jdbcType=BIT}, #{providerType, jdbcType=VARCHAR}, #{refreshToken, jdbcType=VARCHAR})
	</insert>

	<!-- 사용자 로그인 -->
	<select id="login" parameterType="com.yeoro.domain.user.model.dto.request.LoginRequestDto" resultMap="userResultMap">
		SELECT user_id, password, nickname, picture_url, is_admin, provider_type, refresh_token, created_at, updated_at
		FROM user
		WHERE user_id=#{userId} AND password=#{password}
	</select>

	<!-- 사용자 정보 조회 -->
	<select id="userInfo" parameterType="string" resultMap="userResultMap">
		SELECT *
		FROM user
		WHERE user_id=#{userId}
	</select>

	<!-- 사용자 정보 업데이트 -->
	<update id="updateUser" parameterType="com.yeoro.domain.user.model.dto.UserDto">
		UPDATE user
		<set>
			<if test="password != null and password != ''">
				password=#{password},
			</if>
			<if test="nickname != null and nickname != ''">
				nickname=#{nickname},
			</if>
			<if test="pictureUrl != null and pictureUrl != ''">
				picture_url=#{pictureUrl, jdbcType=VARCHAR},
			</if>
		</set>
		WHERE user_id=#{userId}
	</update>

	<!-- 사용자 삭제 -->
	<delete id="deleteUser" parameterType="string">
		DELETE FROM user
		WHERE user_id=#{userId}
	</delete>

	<!-- 리프레시 토큰 저장 -->
	<insert id="saveRefreshToken" parameterType="map">
		UPDATE user
		SET refresh_token=#{token}
		WHERE user_id=#{userId}
	</insert>

	<!-- 리프레시 토큰 조회 -->
	<select id="findRefreshTokenByUserId" parameterType="string" resultType="string">
		SELECT refresh_token
		FROM user
		WHERE user_id=#{userId}
	</select>

	<!-- 리프레시 토큰 삭제 -->
	<delete id="deleteRefreshToken" parameterType="map">
		DELETE FROM user
		WHERE user_id=#{userId} AND refresh_token=#{token}
	</delete>

	<!-- 프로필 사진 삭제 -->
	<update id="deletePicture" parameterType="string">
		UPDATE user
		SET picture_url = NULL
		WHERE user_id=#{userId}
	</update>

</mapper>
